def writeReport(client,cryptoCurrency,initialInvestemnt,startTime):
    from datetime import datetime
    from weasyprint import HTML
    import pandas as pd
    import time

    # How many CRY are in the balance
    for currency in client.get_balance()["data"]:
        if currency["wallet"]==cryptoCurrency:
            CRY_available=float(currency["balance"])
            break

    # How much time has it been running
    seconds=time.time()-startTime
    days=int(seconds//(24*3600))
    seconds%=(24*3600)
    hours=int(seconds//3600)
    seconds%=3600
    minutes=int(seconds//60)
    seconds%=60

    # Today's date
    today=datetime.now().strftime("%A, %d %B %Y")

    records=pd.read_csv('./reports/records.csv')

    # Record Summary
    onlyCRY=int(CRY_available*float(client.get_ticker(market=cryptoCurrency+'CLP')[0]["last_price"]))
    onlyCLP=int(float(client.get_balance()[3]["balance"]))
    onlySales=int(sum(records.loc[records["Side"]=="sell"]["Total"]))
    onlyPurchases=int(sum(records.loc[records["Side"]=="buy"]["Total"]))
    onlyProfit=onlyCRY+onlyCLP-initialInvestemnt

    # HTML Investment Report

    styleSummary="""
    <style>
      table.summary {width: 75%; margin-left: auto; margin-right: auto; cellpadding="10"; text-align: left; border-collapse: collapse;}
      table.summary td, table.summary th {border: 2px solid #AAAAAA; padding: 6px 6px;}
    </style>
    """
    styleDetail="""
    <style>
      table.dataframe {width: 100%;text-align: left;border-collapse: collapse;}
      table.dataframe td, table.dataframe th {border: 1px solid #AAAAAA;padding: 3px 2px;}
      table.dataframe tbody tr th {text-align: center;}
    </style>
    """

    htmlSummary="""
    <h1 style="text-align: center;">{} Investment Report</h1>
    <p style="text-align: justify;">This report is automatically generated by the Trading Bot using the CryptoMKT API. The following information has been generated after a running time of {} Days, {} Hours, {} Minutes, {} Seconds.</p>
    <p style="text-align: justify;">All the information presented here is dated {}. Therefore, it may be out of date by the time it is read.</p>
    <h2>Trading Summary</h2>
    <table border="1" class="summary">
    <tbody>
    <tr>
    <td>{} assessed in CLP</td>
    <td>{}*</td>
    </tr>
    <tr>
    <td>CLP Balance</td>
    <td>{}</td>
    </tr>
    <tr>
    <td>CLP earned from Sales</td>
    <td>{}</td>
    </tr>
    <tr>
    <td>CLP spent on Purchases</td>
    <td>{}</td>
    </tr>
    <tr>
    <td>Initial Investment</td>
    <td>{}</td>
    </tr>
    <tr>
    <td>Relative Profit Estimate</td>
    <td>{}**</td>
    </tr>
    </tbody>
    </table>
    <p><em>*Its value may vary over time, so this is not a static value.</em></p>
    <p><em>**These are not actual earnings but a profit relative to the value of the {} today.</em></p>
    <h2>Trade Detail</h2>
    """.format(cryptoCurrency, str(days),str(hours),str(minutes),str(int(seconds)),today,cryptoCurrency,str(onlyCRY),str(onlyCLP),str(onlySales),str(onlyPurchases),str(initialInvestemnt),str(onlyProfit),cryptoCurrency)

    records["Total"]=records["Total"].astype(int)
    records["Fees"]=records["Fees"].astype(int)
    htmlDetail=records.to_html().replace('<tr style="text-align: right;">','<tr>')

    html='<html>'+styleSummary+styleDetail+htmlSummary+htmlDetail+'</html>'

    # Write the report in PDF
    HTML(string=html).write_pdf('./reports/report.pdf')
